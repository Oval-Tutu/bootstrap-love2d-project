name: Build L√ñVE ü©∑üíô

on:
  push:
    tags:
      - "v?[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

env:
  BUILD_TYPE: ${{ fromJSON('["dev", "release"]')[startsWith(github.ref, 'refs/tags/v')] }}
  OUTPUT_FOLDER: ./builds
  PRODUCT_NAME: Game
  PRODUCT_ID: com.oval-tutu.game
  PRODUCT_DESC: A game made with L√ñVE by Oval Tutu
  PRODUCT_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || '0.0.0' }}
  PRODUCT_PNG: ./tools/icon.png
  PRODUCT_ICNS: ./tools/icns/icon.icns
  PRODUCT_ICO: ./tools/icon.ico
  PRODUCT_RES: ./tools/res/
  PRODUCT_COPYRIGHT: Copyright (c)Ô∏è 2024 Oval Tutu
  PRODUCT_COMPANY: Oval Tutu
  PRODUCT_WEBSITE: https://oval-tutu.com
  PRODUCT_UUID: 3e64d17c-8797-4382-921f-cf488b22073f

jobs:
  build-love:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build love package
        uses: love-actions/love-actions-core@v1
        with:
          build-list: ./game/
          package-path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
      - name: Upload love package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
  build-linux:
    runs-on: ubuntu-22.04
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build Linux packages
        id: build-packages
        uses: love-actions/love-actions-linux@v2
        with:
          app-name: ${{ env.PRODUCT_NAME }}
          bundle-id: ${{ env.PRODUCT_ID }}
          description: ${{ env.PRODUCT_DESC }}
          version-string: ${{ env.PRODUCT_VERSION }}
          icon-path: ${{ env.PRODUCT_PNG }}
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_AppImage
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.AppImage
      - name: Upload Deb
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_deb
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.deb
  build-windows:
    runs-on: windows-latest
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build Windows packages
        id: build-packages
        uses: love-actions/love-actions-windows@v1
        with:
          app-id: ${{ env.PRODUCT_UUID }}
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          icon-path: ${{ env.PRODUCT_ICO }}
          #rc-path: ./.github/build/windows/${{ env.BUILD_TYPE }}/template.rc
          project-website: ${{ env.PRODUCT_WEBSITE }}
          installer-languages: English.isl
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload 32-bit artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_Windows_x86
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_x86.zip
      - name: Upload 64-bit artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_Windows_x64
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_x64.zip
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_Windows_installer
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_installer.exe
  build-android:
    runs-on: ubuntu-22.04
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build Android packages
        id: build-packages
        uses: love-actions/love-actions-android@v2
        with:
          app-name: ${{ env.PRODUCT_NAME }}
          bundle-id: com.ovaltutu.${{ env.PRODUCT_NAME }}
          #icon-specifier: "@mipmap/icon"
          #keystore-alias: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          #keystore-base64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          #keystore-key-password: ${{ secrets.ANDROID_KEYSTORE_KEYPASSWORD }}
          #keystore-store-password: ${{ secrets.ANDROID_KEYSTORE_STOREPASSWORD }}
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          resource-path: ${{ env.PRODUCT_RES }}
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}
          version-string: ${{ env.PRODUCT_VERSION }}
          version-code: ${{ github.run_number }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_Android_release
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-release.apk
  build-macos-portable:
    runs-on: macos-latest
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build macOS packages
        id: build-packages
        uses: love-actions/love-actions-macos-portable@v1
        with:
          app-name: ${{ env.PRODUCT_NAME }}
          bundle-id: ${{ env.PRODUCT_ID }}
          copyright: ${{ env.PRODUCT_COPYRIGHT }}
          icon-path: ${{ env.PRODUCT_ICNS }}
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-portable
          version-string: ${{ env.PRODUCT_VERSION }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
          #account-username: ${{ secrets.APPLE_ACCOUNT_USERNAME }}
          #account-password: ${{ secrets.APPLE_ACCOUNT_PASSWORD }}
          #team-id: "${{ secrets.APPLE_DEVELOPER_TEAM_ID }}"
          #developer-id-application-base64: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION }}
          #developer-id-application-password: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION_PWD }}
          #developer-id-installer-base64: ${{ secrets.APPLE_CERT_DEVELOPER_ID_INSTALLER }}
          #developer-id-installer-password: ${{ secrets.APPLE_CERT_DEVELOPER_ID_INSTALLER_PWD }}
          #dmg-background-path: ./.github/build/macOS/${{ env.BUILD_TYPE }}/dmg.png
          #dmg-icon-position: "239 203"
          #dmg-icon-size: "100"
          #dmg-link-position: "565 203"
          #dmg-text-size: "12"
          #dmg-volume-icon-path: ./.github/build/macOS/${{ env.BUILD_TYPE }}/dmg.icns
          dmg-volume-name: ${{ env.PRODUCT_NAME }}
          #dmg-window-position: "200 120"
          #dmg-window-size: "800 500"
      - name: Upload pkg artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_macOS_portable_pkg
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-portable.pkg
      - name: Upload dmg artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_macOS_portable_dmg
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-portable.dmg
      - name: Upload bare artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_macOS_portable_zip
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-portable.zip
  build-macos-appstore:
    runs-on: macos-latest
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build macOS packages
        id: build-packages
        uses: love-actions/love-actions-macos-appstore@v1
        with:
          app-name: ${{ env.PRODUCT_NAME }}
          bundle-id: ${{ env.PRODUCT_ID }}
          copyright: ${{ env.PRODUCT_COPYRIGHT }}
          icon-path: ${{ env.PRODUCT_ICNS }}
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          #libs-path: ./ColdClear/universal/
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-appstore
          version-string: ${{ env.PRODUCT_VERSION }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
          #apple-development-base64: ${{ secrets.APPLE_CERT_APPLE_DEVELOPMENT_BASE64 }}
          #apple-development-password: ${{ secrets.APPLE_CERT_APPLE_DEVELOPMENT_PWD }}
          #api-key: ${{ secrets.APPLE_API_KEY }}
          #api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          #api-issuer-id: ${{ secrets.APPLE_API_ISSUER_ID }}
          #team-id: ${{ secrets.APPLE_DEVELOPER_TEAM_ID }}
          #apple-id: ${{ secrets.APPLE_APPLE_ID }}
          external-test: ${{ startsWith(github.ref, 'refs/tags/pre') }}
          store-release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Upload logs artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_macOS_appstore_logs
          path: |
            ${{ env.OUTPUT_FOLDER }}/DistributionSummary.plist
            ${{ env.OUTPUT_FOLDER }}/ExportOptions.plist
            ${{ env.OUTPUT_FOLDER }}/Packaging.log
      - name: Upload pkg artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_macOS_appstore_pkg
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}-appstore.pkg
  build-ios:
    runs-on: macos-latest
    needs: [build-love]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_love
      - name: Build iOS packages
        id: build-packages
        uses: love-actions/love-actions-ios@v1
        with:
          app-name: ${{ env.PRODUCT_NAME }}
          bundle-id: ${{ env.PRODUCT_ID }}
          copyright: ${{ env.PRODUCT_COPYRIGHT }}
          icon-path: ./tools/icns
          #love-patch: ./.github/build/iOS/love.patch
          love-package: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.love
          #libs-path: ./ColdClear/arm64/
          product-name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}
          version-string: ${{ env.PRODUCT_VERSION }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
          #apple-development-base64: ${{ secrets.APPLE_CERT_APPLE_DEVELOPMENT_BASE64 }}
          #apple-development-password: ${{ secrets.APPLE_CERT_APPLE_DEVELOPMENT_PWD }}
          #api-key: ${{ secrets.APPLE_API_KEY }}
          #api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          #api-issuer-id: ${{ secrets.APPLE_API_ISSUER_ID }}
          #team-id: ${{ secrets.APPLE_DEVELOPER_TEAM_ID }}
          #apple-id: ${{ secrets.APPLE_APPLE_ID }}
          external-test: ${{ startsWith(github.ref, 'refs/tags/pre') }}
          store-release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Upload logs artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_iOS_logs
          path: |
            ${{ env.OUTPUT_FOLDER }}/DistributionSummary.plist
            ${{ env.OUTPUT_FOLDER }}/ExportOptions.plist
            ${{ env.OUTPUT_FOLDER }}/Packaging.log
      - name: Upload ipa artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}_iOS_ipa
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}-${{ env.PRODUCT_VERSION }}.ipa
